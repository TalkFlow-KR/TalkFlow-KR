<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>음성을 텍스트로 변환</title>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>음성을 텍스트로 변환</h1>

    <div>
      <button onclick="startRecording()">녹음 시작</button>
      <button id="add-div-button" onclick="stopRecording()">녹음 종료</button>
      <p id="status"></p>
    </div>

    <!-- ///클릭하면 public 오디오재생
    <audio controls autoplay>
      <source src="Voice.mp3" type="audio/mp3" />
      Your browser does not support the audio element.
    </audio>
    // 클릭하면 public 오디오 재생 함수 추가
    <button onclick="addAudio()">Play Audio</button> -->

    <div>
      <h2>음성 변환 내역</h2>
      <input id="transcription" />
      <button type="submit" onclick="edit()">대화하기</button>
    </div>
    <div>---------채팅 내역--------</div>
    <div class="Date"></div>
    <div id="div-container">
      <div input></div>
    </div>

    <script>
      // 오디오 div 생성
      function addAudio(mp3Filename) {
        const audio = document.createElement("audio");
        audio.autoplay = true;
        audio.src = mp3Filename;
        document.body.appendChild(audio);
      }

      const startRecording = async () => {
        console.log("녹음 준비 중");
        console.log(">>> test1");
        const res = await fetch("/start");
        const nameOfMp3 = await res.json();

        if (res.ok) {
          console.log("녹음이 성공적으로 완료되었습니다.");
          document.getElementById("status").textContent =
            "녹음이 성공적으로 완료되었습니다.";
        } else {
          document.getElementById("status").textContent =
            "녹음을 하는데 실패했습니다.";
        }
      };

      const stopRecording = async () => {
          // let currentDate = new Date();
          // let year = currentDate.getFullYear();
          // let month = String(currentDate.getMonth() + 1).padStart(2, "0");
          // let day = String(currentDate.getDate()).padStart(2, "0");
          // document.getElementsByClassName(
          //   "Date"
          // )[0].textContent = `${year}년 ${month}월 ${day}일`;

          // // 전송 시간
          // let newHours = currentDate.getHours();
          // if (newHours > 12) {
          //   newHours -= 12;
          //  }
          // let period = (newHours < 12) ? "AM" : "PM";
          // let newMinutes = currentDate.getMinutes();
          // let newSeconds = currentDate.getSeconds();
          // let time = `${newHours}:${newMinutes}:${newSeconds} ${period}`;

          console.log("녹음 종료를 누르셨습니다. 번역 중이니 잠시만 기다리세요.");
          const res = await fetch("/stop");

          if (res.ok) {
            document.getElementById("status").textContent = "번역중 입니다.";
            const data = await res.json();
            document.getElementById("transcription").textContent =
              data.transcription;
              transcription.value = data.transcription;
            console.log("번역이 전달되었습니다.");
            // stopRecording > 멈추고 > input 값에 넣어 > stop에서 버튼 누르면 그때 보내기.
          }
        }

         const edit = async ()=>{
          let currentDate = new Date();
          let year = currentDate.getFullYear();
          let month = String(currentDate.getMonth() + 1).padStart(2, "0");
          let day = String(currentDate.getDate()).padStart(2, "0");
          document.getElementsByClassName(
            "Date"
          )[0].textContent = `${year}년 ${month}월 ${day}일`;
           // 전송 시간
           let newHours = currentDate.getHours();
          if (newHours > 12) {
            newHours -= 12;
           }
          let period = (newHours < 12) ? "AM" : "PM";
          let newMinutes = currentDate.getMinutes();
          let newSeconds = currentDate.getSeconds();
          let time = `${newHours}:${newMinutes}:${newSeconds} ${period}`;

          const res =  fetch("/stop");
            const divContainer = document.getElementById("div-container");
            const iSayDiv = document.createElement("div");
            // iSayDiv.value = data.transcription;
            iSayDiv.textContent = "------i say------";
            divContainer.appendChild(iSayDiv);

            const newDiv = document.createElement("div");
            newDiv.textContent = data.transcription;
            divContainer.appendChild(newDiv);

            const User_time = document.createElement("div");
            User_time.textContent = time;
            divContainer.appendChild(User_time);

            console.log("Gpt음성 출력 시작...");
            await chatAns();
            console.log("Gpt음성 출력 종료...");
            <!-- await fetch("/delete"); -->
            chatAns();
          }
      const chatAns = async () => {
        let currentDate = new Date();
        let year = currentDate.getFullYear();
        let month = String(currentDate.getMonth() + 1).padStart(2, "0");
        let day = String(currentDate.getDate()).padStart(2, "0");
        document.getElementsByClassName(
          "Date"
        )[0].textContent = `${year}년 ${month}월 ${day}일`;

        // 전송 시간
        let newHours = currentDate.getHours();
        if (newHours > 12) {
          newHours -= 12;
         }
        let period = (newHours < 12) ? "AM" : "PM";
        let newMinutes = currentDate.getMinutes();
        let newSeconds = currentDate.getSeconds();
        let time = `${newHours}:${newMinutes}:${newSeconds} ${period}`;

        console.log("chatgpt가 답변중입니다..");
        const res = await fetch("/chat");
        if (res.ok) {
          document.getElementById("status").textContent =
            "chatgpt가 답변중입니다.";
          const data1 = await res.json();

          console.log("답변이 완료되었습니다..");
          document.getElementById("status").textContent =
            "chatgpt가 답변을 완료했습니다.";
          console.log("file name is", data1.newFilename2);

          // 답변 div로 출력.
          const divContainer = document.getElementById("div-container");
          const gptSayDiv = document.createElement("div");
          gptSayDiv.textContent = "------gpt say------";
          divContainer.appendChild(gptSayDiv);

          const newDiv = document.createElement("div");
          newDiv.textContent = data1.answer;
          divContainer.appendChild(newDiv);

          console.log("음성 봇 실행 중");
          // 음성 출력
          await addAudio(data1.newFilename2);
          console.log("음성 출력 완료.");

          const Gpt_time = document.createElement("div");
          Gpt_time.textContent = time;
          divContainer.appendChild(Gpt_time);

          console.log("답변 div 출력 완료.");

        } else {
          document.getElementById("status").textContent =
            "Error stopping recording";
        }
      };
    </script>
  </body>
</html>
